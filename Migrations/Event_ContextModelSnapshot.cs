// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using projeto_event_plus.Contexts;

#nullable disable

namespace projeto_event_plus.Migrations
{
    [DbContext(typeof(Event_Context))]
    partial class Event_ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("projeto_event_plus.Domains.ComentarioEvento", b =>
                {
                    b.Property<Guid>("IdComentarioEvento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<bool>("Exibe")
                        .HasColumnType("BIT");

                    b.Property<Guid>("IdEventos")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdUsuarios")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdComentarioEvento");

                    b.HasIndex("IdEventos");

                    b.HasIndex("IdUsuarios");

                    b.ToTable("ComentarioEvento");
                });

            modelBuilder.Entity("projeto_event_plus.Domains.Eventos", b =>
                {
                    b.Property<Guid>("IdEvento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataEvento")
                        .HasColumnType("DATE");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("IdInstituicoes")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdTiposEventos")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NomeEvento")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("IdEvento");

                    b.HasIndex("IdInstituicoes");

                    b.HasIndex("IdTiposEventos");

                    b.ToTable("Eventos");
                });

            modelBuilder.Entity("projeto_event_plus.Domains.Instituicoes", b =>
                {
                    b.Property<Guid>("IdInstituicoes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("VARCHAR(14)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("NomeFantasia")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("IdInstituicoes");

                    b.HasIndex("CNPJ")
                        .IsUnique();

                    b.ToTable("Instituicoes");
                });

            modelBuilder.Entity("projeto_event_plus.Domains.PresencasEventos", b =>
                {
                    b.Property<Guid>("IdPresenca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdEventos")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdUsuarios")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Situacao")
                        .HasColumnType("BIT");

                    b.HasKey("IdPresenca");

                    b.HasIndex("IdEventos");

                    b.HasIndex("IdUsuarios");

                    b.ToTable("PresencasEventos");
                });

            modelBuilder.Entity("projeto_event_plus.Domains.TiposEventos", b =>
                {
                    b.Property<Guid>("IdTiposEventos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TituloTipoEvento")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("IdTiposEventos");

                    b.ToTable("TiposEventos");
                });

            modelBuilder.Entity("projeto_event_plus.Domains.TiposUsuarios", b =>
                {
                    b.Property<Guid>("IdTiposUsuarios")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TituloTipoUsuario")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("IdTiposUsuarios");

                    b.ToTable("TiposUsuarios");
                });

            modelBuilder.Entity("projeto_event_plus.Domains.Usuarios", b =>
                {
                    b.Property<Guid>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<Guid>("IdTiposUsuarios")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NomeUsuario")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR(60)");

                    b.HasKey("IdUsuario");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("IdTiposUsuarios");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("projeto_event_plus.Domains.ComentarioEvento", b =>
                {
                    b.HasOne("projeto_event_plus.Domains.Eventos", "Eventos")
                        .WithMany()
                        .HasForeignKey("IdEventos")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("projeto_event_plus.Domains.Usuarios", "Usuarios")
                        .WithMany()
                        .HasForeignKey("IdUsuarios")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Eventos");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("projeto_event_plus.Domains.Eventos", b =>
                {
                    b.HasOne("projeto_event_plus.Domains.Instituicoes", "Instituicoes")
                        .WithMany()
                        .HasForeignKey("IdInstituicoes")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("projeto_event_plus.Domains.TiposEventos", "TiposEvento")
                        .WithMany()
                        .HasForeignKey("IdTiposEventos")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instituicoes");

                    b.Navigation("TiposEvento");
                });

            modelBuilder.Entity("projeto_event_plus.Domains.PresencasEventos", b =>
                {
                    b.HasOne("projeto_event_plus.Domains.Eventos", "Eventos")
                        .WithMany()
                        .HasForeignKey("IdEventos")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("projeto_event_plus.Domains.Usuarios", "Usuarios")
                        .WithMany()
                        .HasForeignKey("IdUsuarios")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Eventos");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("projeto_event_plus.Domains.Usuarios", b =>
                {
                    b.HasOne("projeto_event_plus.Domains.TiposUsuarios", "TiposUsuarios")
                        .WithMany()
                        .HasForeignKey("IdTiposUsuarios")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TiposUsuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
